//Configuración Básica://

Configurar nombre para los commits: git config --global user.name "tu_nombre"
Configurar email: git config --global user.email tu_email@example.com
Marco de colores para los comandos: git config --global color.ui true
Iniciando Repositorio:

Iniciar un repositorio Git: git init

Clonar un repositorio de GitHub o Bitbucket: git clone <url>
Añadir todos los archivos para el commit: git add .
Hacer el primer commit: git commit -m "Mensaje"

//GIT CLONE://

Clonar un repositorio: git clone <url>
Clonar un repositorio en una carpeta específica: git clone <url> nombre_carpeta

//GIT ADD://

Añadir todos los archivos para el commit: git add .
Añadir un archivo específico: git add <archivo>
Añadir todos los archivos ignorando los nuevos: git add --all
Añadir archivos con una extensión específica: git add *.txt
Añadir archivos dentro de un directorio con una extensión específica: git add directorio/*.txt
Añadir todos los archivos dentro de un directorio: git add directorio/

//GIT COMMIT://

Realizar un commit: git commit -m "Mensaje"
Realizar un commit agregando todos los archivos automáticamente: git commit -a -m "Mensaje"
Mostrar conflictos durante el commit: git commit -a
Modificar el mensaje del último commit: git commit --amend -m "Nuevo mensaje"

//GIT PUSH://

Subir cambios al repositorio remoto: git push <origen> <rama>
Subir tags al repositorio remoto: git push --tags

//GIT LOG://

Ver registros de commits: git log
Ver cambios en los commits: git log --oneline --stat
Ver gráfico de commits: git log --oneline --graph

//GIT DIFF://

Ver cambios realizados en un archivo: git diff
Ver cambios realizados en archivos que están en staging: git diff --staged

//GIT HEAD://

Sacar un archivo del commit: git reset HEAD <archivo>
Devolver el último commit manteniendo los cambios en staging: git reset --soft HEAD^
Devolver el último commit y deshacer todos los cambios: git reset --hard HEAD^

//GIT REMOTE://

Agregar un repositorio remoto: git remote add origin <url>
Cambiar la URL del repositorio remoto: git remote set-url origin <url>
Eliminar un repositorio remoto: git remote rm <nombre/origin>
Ver lista de repositorios remotos: git remote -v

//GIT BRANCH://

Crear una nueva rama: git branch <nombreRama>
Listar ramas: git branch
Eliminar una rama: git branch -d <nombreRama>


//GIT TAG://

Ver lista de tags: git tag
Crear un nuevo tag: git tag -a <versión> -m "Mensaje"
GIT REBASE:

Unir la rama actual con la rama master: git rebase
Resolver conflictos durante un rebase: git rebase --continue, git rebase --skip, git rebase --abort

//Otros Comandos://

Ver estado actual del repositorio: git status
Deshacer cambios en un archivo: git checkout -- <archivo>
Crear una rama basada en una remota: git checkout -b nombre_nueva_rama origin/nombre_rama_remota
Actualizar el repositorio con cambios remotos: git pull origin <nombreRama>
Cambiar a otra rama: git checkout <nombreRama>
Unir una rama con otra: git merge <nombreRama>
Verificar cambios en el repositorio remoto: git fetch
Borrar un archivo del repositorio: git rm <archivo>

//Fork://

Descargar el remote de un fork: git remote add upstream <url_del_original>
Hacer merge con el master del fork: git fetch upstream y git merge upstream/master